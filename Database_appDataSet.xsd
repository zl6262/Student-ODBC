<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database_appDataSet" targetNamespace="http://tempuri.org/Database_appDataSet.xsd" xmlns:mstns="http://tempuri.org/Database_appDataSet.xsd" xmlns="http://tempuri.org/Database_appDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database_appConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database_appConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WpfApp1.Properties.Settings.GlobalReference.Default.Database_appConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CTableAdapter" GeneratorDataComponentClassName="CTableAdapter" Name="C" UserDataComponentName="CTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database_appConnectionString (Settings)" DbObjectName="Database_app.dbo.C" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[C] WHERE (([CNO] = @Original_CNO) AND ([CNAME] = @Original_CNAME) AND ((@IsNull_TEACHER = 1 AND [TEACHER] IS NULL) OR ([TEACHER] = @Original_TEACHER)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TEACHER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TEACHER" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TEACHER" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TEACHER" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[C] ([CNO], [CNAME], [TEACHER]) VALUES (@CNO, @CNAME, @TEACHER);
SELECT CNO, CNAME, TEACHER FROM C WHERE (CNO = @CNO)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TEACHER" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TEACHER" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT CNO, CNAME, TEACHER FROM dbo.C</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[C] SET [CNO] = @CNO, [CNAME] = @CNAME, [TEACHER] = @TEACHER WHERE (([CNO] = @Original_CNO) AND ([CNAME] = @Original_CNAME) AND ((@IsNull_TEACHER = 1 AND [TEACHER] IS NULL) OR ([TEACHER] = @Original_TEACHER)));
SELECT CNO, CNAME, TEACHER FROM C WHERE (CNO = @CNO)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TEACHER" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TEACHER" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TEACHER" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TEACHER" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TEACHER" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TEACHER" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="CNO" DataSetColumn="CNO" />
              <Mapping SourceColumn="CNAME" DataSetColumn="CNAME" />
              <Mapping SourceColumn="TEACHER" DataSetColumn="TEACHER" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="STableAdapter" GeneratorDataComponentClassName="STableAdapter" Name="S" UserDataComponentName="STableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database_appConnectionString (Settings)" DbObjectName="Database_app.dbo.S" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[S] WHERE (([SNO] = @Original_SNO) AND ([SNAME] = @Original_SNAME) AND ((@IsNull_SAGE = 1 AND [SAGE] IS NULL) OR ([SAGE] = @Original_SAGE)) AND ((@IsNull_SDEPT = 1 AND [SDEPT] IS NULL) OR ([SDEPT] = @Original_SDEPT)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SAGE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SAGE" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SAGE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SAGE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SDEPT" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SDEPT" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SDEPT" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SDEPT" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[S] ([SNO], [SNAME], [SAGE], [SDEPT]) VALUES (@SNO, @SNAME, @SAGE, @SDEPT);
SELECT SNO, SNAME, SAGE, SDEPT FROM S WHERE (SNO = @SNO)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SAGE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SAGE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SDEPT" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SDEPT" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SNO, SNAME, SAGE, SDEPT FROM dbo.S</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[S] SET [SNO] = @SNO, [SNAME] = @SNAME, [SAGE] = @SAGE, [SDEPT] = @SDEPT WHERE (([SNO] = @Original_SNO) AND ([SNAME] = @Original_SNAME) AND ((@IsNull_SAGE = 1 AND [SAGE] IS NULL) OR ([SAGE] = @Original_SAGE)) AND ((@IsNull_SDEPT = 1 AND [SDEPT] IS NULL) OR ([SDEPT] = @Original_SDEPT)));
SELECT SNO, SNAME, SAGE, SDEPT FROM S WHERE (SNO = @SNO)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNAME" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SAGE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SAGE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SDEPT" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SDEPT" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SNAME" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNAME" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SAGE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SAGE" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SAGE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SAGE" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SDEPT" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SDEPT" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SDEPT" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SDEPT" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SNO" DataSetColumn="SNO" />
              <Mapping SourceColumn="SNAME" DataSetColumn="SNAME" />
              <Mapping SourceColumn="SAGE" DataSetColumn="SAGE" />
              <Mapping SourceColumn="SDEPT" DataSetColumn="SDEPT" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SCTableAdapter" GeneratorDataComponentClassName="SCTableAdapter" Name="SC" UserDataComponentName="SCTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database_appConnectionString (Settings)" DbObjectName="Database_app.dbo.SC" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SC] WHERE (([SNO] = @Original_SNO) AND ([CNO] = @Original_CNO) AND ((@IsNull_GRADE = 1 AND [GRADE] IS NULL) OR ([GRADE] = @Original_GRADE)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GRADE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GRADE" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GRADE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GRADE" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SC] ([SNO], [CNO], [GRADE]) VALUES (@SNO, @CNO, @GRADE);
SELECT SNO, CNO, GRADE FROM SC WHERE (CNO = @CNO) AND (SNO = @SNO)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GRADE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GRADE" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SNO, CNO, GRADE FROM dbo.SC</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SC] SET [SNO] = @SNO, [CNO] = @CNO, [GRADE] = @GRADE WHERE (([SNO] = @Original_SNO) AND ([CNO] = @Original_CNO) AND ((@IsNull_GRADE = 1 AND [GRADE] IS NULL) OR ([GRADE] = @Original_GRADE)));
SELECT SNO, CNO, GRADE FROM SC WHERE (CNO = @CNO) AND (SNO = @SNO)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@GRADE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GRADE" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_CNO" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="CNO" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_GRADE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GRADE" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_GRADE" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="GRADE" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SNO" DataSetColumn="SNO" />
              <Mapping SourceColumn="CNO" DataSetColumn="CNO" />
              <Mapping SourceColumn="GRADE" DataSetColumn="GRADE" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database_appDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="Database_appDataSet" msprop:Generator_UserDSName="Database_appDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="C" msprop:Generator_TableClassName="CDataTable" msprop:Generator_TableVarName="tableC" msprop:Generator_RowChangedName="CRowChanged" msprop:Generator_TablePropName="C" msprop:Generator_RowDeletingName="CRowDeleting" msprop:Generator_RowChangingName="CRowChanging" msprop:Generator_RowEvHandlerName="CRowChangeEventHandler" msprop:Generator_RowDeletedName="CRowDeleted" msprop:Generator_RowClassName="CRow" msprop:Generator_UserTableName="C" msprop:Generator_RowEvArgName="CRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="CNO" msprop:Generator_ColumnVarNameInTable="columnCNO" msprop:Generator_ColumnPropNameInRow="CNO" msprop:Generator_ColumnPropNameInTable="CNOColumn" msprop:Generator_UserColumnName="CNO">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CNAME" msprop:Generator_ColumnVarNameInTable="columnCNAME" msprop:Generator_ColumnPropNameInRow="CNAME" msprop:Generator_ColumnPropNameInTable="CNAMEColumn" msprop:Generator_UserColumnName="CNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TEACHER" msprop:Generator_ColumnVarNameInTable="columnTEACHER" msprop:Generator_ColumnPropNameInRow="TEACHER" msprop:Generator_ColumnPropNameInTable="TEACHERColumn" msprop:Generator_UserColumnName="TEACHER" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="S" msprop:Generator_TableClassName="SDataTable" msprop:Generator_TableVarName="tableS" msprop:Generator_RowChangedName="SRowChanged" msprop:Generator_TablePropName="S" msprop:Generator_RowDeletingName="SRowDeleting" msprop:Generator_RowChangingName="SRowChanging" msprop:Generator_RowEvHandlerName="SRowChangeEventHandler" msprop:Generator_RowDeletedName="SRowDeleted" msprop:Generator_RowClassName="SRow" msprop:Generator_UserTableName="S" msprop:Generator_RowEvArgName="SRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SNO" msprop:Generator_ColumnVarNameInTable="columnSNO" msprop:Generator_ColumnPropNameInRow="SNO" msprop:Generator_ColumnPropNameInTable="SNOColumn" msprop:Generator_UserColumnName="SNO">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SNAME" msprop:Generator_ColumnVarNameInTable="columnSNAME" msprop:Generator_ColumnPropNameInRow="SNAME" msprop:Generator_ColumnPropNameInTable="SNAMEColumn" msprop:Generator_UserColumnName="SNAME">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SAGE" msprop:Generator_ColumnVarNameInTable="columnSAGE" msprop:Generator_ColumnPropNameInRow="SAGE" msprop:Generator_ColumnPropNameInTable="SAGEColumn" msprop:Generator_UserColumnName="SAGE" type="xs:int" minOccurs="0" />
              <xs:element name="SDEPT" msprop:Generator_ColumnVarNameInTable="columnSDEPT" msprop:Generator_ColumnPropNameInRow="SDEPT" msprop:Generator_ColumnPropNameInTable="SDEPTColumn" msprop:Generator_UserColumnName="SDEPT" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SC" msprop:Generator_TableClassName="SCDataTable" msprop:Generator_TableVarName="tableSC" msprop:Generator_RowChangedName="SCRowChanged" msprop:Generator_TablePropName="SC" msprop:Generator_RowDeletingName="SCRowDeleting" msprop:Generator_RowChangingName="SCRowChanging" msprop:Generator_RowEvHandlerName="SCRowChangeEventHandler" msprop:Generator_RowDeletedName="SCRowDeleted" msprop:Generator_RowClassName="SCRow" msprop:Generator_UserTableName="SC" msprop:Generator_RowEvArgName="SCRowChangeEvent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SNO" msprop:Generator_ColumnVarNameInTable="columnSNO" msprop:Generator_ColumnPropNameInRow="SNO" msprop:Generator_ColumnPropNameInTable="SNOColumn" msprop:Generator_UserColumnName="SNO">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CNO" msprop:Generator_ColumnVarNameInTable="columnCNO" msprop:Generator_ColumnPropNameInRow="CNO" msprop:Generator_ColumnPropNameInTable="CNOColumn" msprop:Generator_UserColumnName="CNO">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GRADE" msprop:Generator_ColumnVarNameInTable="columnGRADE" msprop:Generator_ColumnPropNameInRow="GRADE" msprop:Generator_ColumnPropNameInTable="GRADEColumn" msprop:Generator_UserColumnName="GRADE" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:C" />
      <xs:field xpath="mstns:CNO" />
    </xs:unique>
    <xs:unique name="S_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:S" />
      <xs:field xpath="mstns:SNO" />
    </xs:unique>
    <xs:unique name="SC_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SC" />
      <xs:field xpath="mstns:SNO" />
      <xs:field xpath="mstns:CNO" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_SC_C" msdata:parent="C" msdata:child="SC" msdata:parentkey="CNO" msdata:childkey="CNO" msprop:Generator_UserChildTable="SC" msprop:Generator_ChildPropName="GetSCRows" msprop:Generator_UserRelationName="FK_SC_C" msprop:Generator_ParentPropName="CRow" msprop:Generator_RelationVarName="relationFK_SC_C" msprop:Generator_UserParentTable="C" />
      <msdata:Relationship name="FK_SC_S" msdata:parent="S" msdata:child="SC" msdata:parentkey="SNO" msdata:childkey="SNO" msprop:Generator_UserChildTable="SC" msprop:Generator_ChildPropName="GetSCRows" msprop:Generator_UserRelationName="FK_SC_S" msprop:Generator_ParentPropName="SRow" msprop:Generator_RelationVarName="relationFK_SC_S" msprop:Generator_UserParentTable="S" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>